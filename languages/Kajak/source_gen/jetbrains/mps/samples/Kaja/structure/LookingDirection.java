package jetbrains.mps.samples.Kaja.structure;

/*Generated by MPS */

import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.LinkedList;

public enum LookingDirection {
  north("north", "north"),
  east("east", "east"),
  south("south", "south"),
  west("west", "west");

  private final String myName;
  public String getName() {
    return myName;
  }
  private final String myValue;
  private LookingDirection(String name, String value) {
    myName = name;
    myValue = value;
  }
  public String getValue() {
    return myValue;
  }
  public String getValueAsString() {
    return myValue;
  }
  public static List<LookingDirection> getConstants() {
    List<LookingDirection> list = ListSequence.fromList(new LinkedList<LookingDirection>());
    ListSequence.fromList(list).addElement(LookingDirection.north);
    ListSequence.fromList(list).addElement(LookingDirection.east);
    ListSequence.fromList(list).addElement(LookingDirection.south);
    ListSequence.fromList(list).addElement(LookingDirection.west);
    return list;
  }
  public static LookingDirection getDefault() {
    return null;
  }
  public static LookingDirection parseValue(String value) {
    if (value == null) {
      return LookingDirection.getDefault();
    }
    if (value.equals(LookingDirection.north.getValueAsString())) {
      return LookingDirection.north;
    }
    if (value.equals(LookingDirection.east.getValueAsString())) {
      return LookingDirection.east;
    }
    if (value.equals(LookingDirection.south.getValueAsString())) {
      return LookingDirection.south;
    }
    if (value.equals(LookingDirection.west.getValueAsString())) {
      return LookingDirection.west;
    }
    return LookingDirection.getDefault();
  }
}
